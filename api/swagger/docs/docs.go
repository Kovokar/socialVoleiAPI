// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/matches": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lista todas as partidas filtrando opcionalmente por status, categoria ou intervalo de datas",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Lista partidas disponíveis",
                "parameters": [
                    {
                        "enum": [
                            "nova",
                            "emAdesao",
                            "confirmada",
                            "encerrada",
                            "realizada"
                        ],
                        "type": "string",
                        "description": "Status da partida",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "iniciante",
                            "intermediario",
                            "avancado",
                            "master",
                            "mista"
                        ],
                        "type": "string",
                        "description": "Categoria da partida",
                        "name": "categoria",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Data inicial",
                        "name": "dataInicio",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Data final",
                        "name": "dataFim",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Match"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cria uma partida com data, horário, local, categoria, sexo permitido e limite de participantes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Cria uma nova partida",
                "parameters": [
                    {
                        "description": "Dados da partida",
                        "name": "match",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Match"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Match"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/matches/{matchId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os detalhes completos de uma partida",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Detalhes de uma partida específica",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID da partida",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Match"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/matches/{matchId}/join": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permite que um usuário entre na partida (ou lista de espera se cheia)",
                "tags": [
                    "match"
                ],
                "summary": "Solicitar participação em partida",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID da partida",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/matches/{matchId}/leave": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permite que um usuário cancele sua participação na partida",
                "tags": [
                    "match"
                ],
                "summary": "Cancelar participação",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID da partida",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/matches/{matchId}/participants": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna confirmados e lista de espera",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "summary": "Listar participantes da partida",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID da partida",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Registra um usuário na plataforma",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Cria um novo usuário",
                "parameters": [
                    {
                        "description": "Dados do usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "description": "Retorna todos os usuários cadastrados (mockado por enquanto)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Lista todos os usuários",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retorna os dados de um usuário específico",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Busca usuário por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Match": {
            "type": "object",
            "properties": {
                "categoria": {
                    "type": "string"
                },
                "custoTotal": {
                    "type": "number"
                },
                "data": {
                    "type": "string"
                },
                "endereco": {
                    "type": "string"
                },
                "horario": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "local": {
                    "type": "string"
                },
                "maxParticipantes": {
                    "type": "integer"
                },
                "observacoes": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "integer"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Participant"
                    }
                },
                "sexoPermitido": {
                    "type": "string"
                },
                "status": {
                    "description": "nova, emAdesao, confirmada, encerrada, realizada",
                    "type": "string"
                },
                "waitingList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Participant"
                    }
                }
            }
        },
        "models.Participant": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "categoria": {
                    "type": "string"
                },
                "codigoConvite": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "senha": {
                    "type": "string"
                },
                "sexo": {
                    "type": "string"
                },
                "telefone": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "API Social Volei",
	Description:      "API para organização de partidas de vôlei",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
